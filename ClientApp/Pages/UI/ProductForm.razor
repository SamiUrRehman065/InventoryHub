@using InventoryHub.Shared.DTOs

@if (Product != null)
{
    <EditForm Model="Product" OnValidSubmit="Submit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label class="form-label">Name</label>
            <InputText class="form-control" @bind-Value="Product.Name" />
        </div>

        <div class="mb-3">
            <label class="form-label">Price</label>
            <InputNumber class="form-control" @bind-Value="Product.Price" />
        </div>

        <div class="mb-3">
            <label class="form-label">Description</label>
            <InputTextArea class="form-control" @bind-Value="Product.Description" />
        </div>

        <button class="btn btn-success me-2" type="submit">Save</button>
        <button class="btn btn-secondary" @onclick="Cancel">Cancel</button>
    </EditForm>
}

@code {
    [Inject] private NavigationManager Navigation { get; set; } = default!;
    [Parameter] public ProductDto? Product { get; set; }
    [Parameter] public EventCallback<ProductDto> OnSubmit { get; set; }

    private async Task Submit() => await OnSubmit.InvokeAsync(Product!);
    private void Cancel() => Navigation.NavigateTo("/products");
}